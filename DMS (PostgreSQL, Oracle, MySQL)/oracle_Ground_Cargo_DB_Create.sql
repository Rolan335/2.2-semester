CREATE TABLE Client(
	ID_Client int GENERATED BY DEFAULT AS IDENTITY,
	Client_Organization_Name varchar(100) not null,
	Client_Legal_Address varchar(100) DEFAULT('-'),
	Client_Physical_Address varchar(100) not null,
	Client_ITN varchar(11) not null,
	Client_BIC varchar(10) not null,
	Client_OKPO varchar(11) not null,
	Client_Repr_Surname varchar(30) not null,
	Client_Repr_Name varchar(30) not null,
	Client_Repr_Second_Name varchar(30) DEFAULT('-'),
    constraint UQ_Client_ITN UNIQUE (Client_ITN),
    constraint UQ_Client_BIC UNIQUE (Client_BIC),
    constraint UQ_Client_OKPO UNIQUE (Client_OKPO),
    constraint CH_Client_ITN CHECK(regexp_like(Client_ITN, '[0-9]{10}')),
    constraint CH_Client_BIC CHECK(regexp_like(Client_BIC, '[0-9]{9}')),
    constraint CH_Client_OKPO CHECK(regexp_like(Client_OKPO, '[0-9]{8}|[0-9]{10}'))
);
ALTER TABLE Client ADD CONSTRAINT PK_Client PRIMARY KEY (ID_Client)
/*++*/

CREATE TABLE Manager(
	ID_Manager int GENERATED BY DEFAULT AS IDENTITY,
	Manager_Surname varchar(30) not null,
	Manager_Name varchar(30) not null,
	Manager_Second_Name varchar(30) DEFAULT('-'),
	Manager_Passport_Series varchar(4) not null,
	Manager_Passport_Number varchar(6) not null,
	Manager_ITN varchar(10) not null,
	Manager_SNILS varchar(14) not null,
    constraint UQ_Manager_ITN UNIQUE (Manager_ITN),
    constraint UQ_Manager_SNILS UNIQUE (Manager_SNILS),
    constraint CH_Manager_Passport_Number CHECK(regexp_like(Manager_Passport_Number, '[0-9]{6}')),
    constraint CH_Manager_ITN CHECK(regexp_like(Manager_ITN, '[0-9]{10}')),
    constraint CH_Manager_SNILS CHECK(regexp_like(Manager_SNILS, '[0-9]{3}\\-[0-9]{3}\\-[0-9]{3} [0-9][0-9]')),
    constraint CH_Manager_Passport_Series CHECK(regexp_like(Manager_Passport_Series, '[0-9]{4}'))
);
ALTER TABLE Manager ADD CONSTRAINT PK_Manager PRIMARY KEY (ID_Manager)
/*++*/

CREATE TABLE Driver(
	ID_Driver int GENERATED BY DEFAULT AS IDENTITY,
	Driver_Surname varchar(30) not null,
	Driver_Name varchar(30) not null,
	Driver_Second_Name varchar(30) DEFAULT('-'),
	Driver_Passport_Series varchar(4) not null,
	Driver_Passport_Number varchar(6) not null,
	Driver_SNILS varchar(14) not null,
	Driver_FFOMI varchar(16) not null,
	Driver_License_Series varchar(4) not null,
	Driver_License_Number varchar(6) not null,
    constraint UQ_Driver_SNILS UNIQUE (Driver_SNILS),
    constraint UQ_Driver_FFOMI UNIQUE (Driver_FFOMI),
    constraint CH_Driver_SNILS CHECK(regexp_like(Driver_SNILS, '[0-9]{3}\\-[0-9]{3}\\-[0-9]{3} [0-9][0-9]')),
    constraint CH_Driver_FFOMI CHECK(regexp_like(Driver_FFOMI, '[0-9]{16}')),
    constraint CH_Driver_Passport_Series CHECK(regexp_like(Driver_Passport_Series, '[0-9]{4}')),
    constraint CH_Driver_Passport_Number CHECK(regexp_like(Driver_Passport_Number, '[0-9]{6}')),
    constraint CH_Driver_License_Series CHECK(regexp_like(Driver_License_Series, '[0-9]{4}')),
    constraint CH_Driver_License_Number CHECK(regexp_like(Driver_License_Number, '[0-9]{6}'))
);
ALTER TABLE Driver ADD CONSTRAINT PK_Driver PRIMARY KEY (ID_Driver)
/*++*/

CREATE TABLE Vehicle
(
    ID_Vehicle int GENERATED BY DEFAULT AS IDENTITY,
    Vehicle_Width int not null,
    Vehicle_Height int not null,
    Vehicle_Length int not null,
    Vehicle_Capacity int not null,
    Vehicle_State_Number varchar(10) not null, 
    constraint CH_Vehicle_State_Number CHECK(regexp_like(Vehicle_State_Number, '[А-Я]{2}[0-9]{3}[А-Я] [0-9]{2,3}'))
);
ALTER TABLE Vehicle ADD CONSTRAINT PK_Vehicle PRIMARY KEY (ID_Vehicle)
/*++*/

CREATE TABLE Complexity
(
        	ID_Complexity int GENERATED BY DEFAULT AS IDENTITY,
        	Complexity_Level int not null,
                constraint UQ_Complexity_Level UNIQUE (Complexity_Level)
);
ALTER TABLE Complexity ADD CONSTRAINT PK_Complexity PRIMARY KEY (ID_Complexity)
/*++*/

CREATE TABLE Request(
	ID_Request int GENERATED BY DEFAULT AS IDENTITY,
	Request_Number int not null,
	Manager_ID int not null,
	Client_ID int not null,
	Request_Date date DEFAULT(CURRENT_DATE),
	Request_Time TIMESTAMP DEFAULT(CURRENT_TIMESTAMP),
    CONSTRAINT PK_Request PRIMARY KEY (ID_Request),
    constraint  FK_Manager FOREIGN KEY (Manager_ID) REFERENCES Manager (ID_Manager),
    constraint  FK_Client FOREIGN KEY (Client_ID) REFERENCES Client (ID_Client)
);/*++*/

CREATE TABLE Cargo(
	ID_Cargo int GENERATED BY DEFAULT AS IDENTITY,
	Cargo_Description varchar(200) not null,
	Request_ID int not null,
	Cargo_Width int not null,
	Cargo_Height int not null,
	Cargo_Length int not null,
	Cargo_Weight int not null,
	Cargo_Price int DEFAULT(0),
    CONSTRAINT PK_Cargo PRIMARY KEY (ID_Cargo),
    constraint  FK_Request FOREIGN KEY (Request_ID) REFERENCES Request (ID_Request)
);/*++*/

CREATE TABLE Delivery_Point(
	ID_Delivery_Point int GENERATED BY DEFAULT AS IDENTITY,
	Delivery_Point_Mark varchar(1) DEFAULT('-'),
	Request_ID int not null,
	Delivery_Point_Destination varchar(200) not null,
    CONSTRAINT PK_Delivery_Point PRIMARY KEY (ID_Delivery_Point),
    constraint CH_Delivery_Point_Mark CHECK(regexp_like(Delivery_Point_Mark, '[+]|[-]')),
    constraint  FK_Request_Delivery FOREIGN KEY (Request_ID) REFERENCES Request (ID_Request)
);/*++*/

CREATE TABLE Route_Sheet(
	ID_Route_Sheet int GENERATED BY DEFAULT AS IDENTITY,
	Route_Sheet_Number int not null,
	Complexity_ID int not null,
	Vehicle_ID int not null,
	Driver_ID int not null,
	Route_Sheet_Date Date DEFAULT(CURRENT_TIMESTAMP),
    constraint FK_Complexity_Route FOREIGN KEY (Complexity_ID) REFERENCES Complexity (ID_Complexity),
    constraint FK_Vehicle_Route FOREIGN KEY (Vehicle_ID) REFERENCES Vehicle (ID_Vehicle),
    constraint FK_Driver_Route FOREIGN KEY (Driver_ID) REFERENCES Driver (ID_Driver)
);
ALTER TABLE Route_Sheet ADD CONSTRAINT PK_Route_Sheet PRIMARY KEY (ID_Route_Sheet)
/*++*/


CREATE TABLE Combination_Route_Sheet_Delivery_Point(
	ID_Combination_Route_Sheet_Delivery_Point int GENERATED BY DEFAULT AS IDENTITY,
	Route_Sheet_ID int not null,
	Delivery_Point_ID int not null,
    constraint FK_Route_Sheet_Combination_1 FOREIGN KEY (Route_Sheet_ID) REFERENCES Route_Sheet (ID_Route_Sheet),
    constraint FK_Delivery_Point_Combination_1 FOREIGN KEY (Delivery_Point_ID) REFERENCES Delivery_Point (ID_Delivery_Point)
);/*++*/

CREATE TABLE Combination_Route_Sheet_Cargo(
	ID_Combination_Route_Sheet_Cargo int GENERATED BY DEFAULT AS IDENTITY,
	Route_Sheet_ID int not null,
	Cargo_ID int not null,
    constraint FK_Route_Sheet_Combination_2 FOREIGN KEY (Route_Sheet_ID) REFERENCES Route_Sheet (ID_Route_Sheet),
    constraint FK_Cargo_Combination_2 FOREIGN KEY (Cargo_ID) REFERENCES Cargo (ID_Cargo)
);